name: Deploy to Ubuntu Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CONTAINER_NAME: prabudda-portfolio
  IMAGE_NAME: prabudda-portfolio

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run linter
      run: pnpm run lint

    - name: Build application
      run: pnpm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Ubuntu Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: ${{ secrets.SERVER_PORT || 22 }}
        script: |
          # Navigate to project directory
          cd /opt/prabudda-portfolio || { echo "Project directory not found"; exit 1; }
          
          # Pull latest changes
          git pull origin main
          
          # Stop existing container
          docker-compose down || true
          
          # Remove old images to save space
          docker image prune -f
          
          # Build and start new container
          docker-compose up -d --build
          
          # Verify deployment
          sleep 10
          if docker-compose ps | grep -q "Up"; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            docker-compose logs
            exit 1
          fi
          
          # Clean up old images
          docker system prune -f
